{"version":3,"file":"static/js/141.6a4f9a9f.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n\nexport const ListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px 11%;\n  margin-left: 0 auto;\n`;\n\nexport const LinkTitle = styled(Link)`\n  text-decoration: underline;\n  color: black;\n  font-weight: 500;\n  font-size: 20px;\n  color: black;\n  :hover {\n    color: #32badf;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  ListContainer,\n  MovieItem,\n  LinkTitle,\n  Container,\n} from './MovieList.styled';\nimport PropTypes from 'prop-types';\nimport noImage from '../image/no-image.jpg';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const baseURL = 'https://image.tmdb.org/t/p/w300';\n\n  return (\n    <Container>\n      <ListContainer>\n        {movies.map(({ id, original_title, poster_path }) => (\n          <MovieItem key={id}>\n            <LinkTitle to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={poster_path ? `${baseURL}${poster_path}` : noImage}\n                alt={original_title}\n                width=\"300\"\n              />\n\n              {original_title}\n            </LinkTitle>\n          </MovieItem>\n        ))}\n      </ListContainer>\n    </Container>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesSection = styled.div`\n  padding: 28px 32px;\n`;\n\nexport const MoviesForm = styled.form`\n  display: inline-flex;\n  margin-bottom: 28px;\n`;\nexport const MoviesInput = styled.input`\n  padding: 8px;\n  width: 200px;\n  font-size: 18px;\n  outline: transparent;\n  border: 1px solid #e1d3c1;\n  :hover,\n  :focus {\n    border-color: #b4a89a;\n  }\n`;\nexport const Button = styled.button`\n  width: 70px;\n  height: 40px;\n  font-size: 16px;\n  background-color: #faebd7;\n  border: 1px solid #e1d3c1;\n  :hover {\n    background-color: #c27ba0;\n    color: #ffffff;\n  }\n`;\n\nexport const MoviesListContainer = styled.ul`\n  padding-left: 16px;\n`;\n\nexport const LinkTitle = styled(Link)`\n  text-decoration: underline;\n  color: black;\n  font-weight: 500;\n  font-size: 20px;\n  color: black;\n  :hover {\n    color: #c27ba0;\n  }\n`;\n\nexport const MoviesItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from '../../services/API';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport {\n  MoviesSection,\n  MoviesForm,\n  MoviesInput,\n  Button,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieSearch = searchParams.get('query');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query: query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (!movieSearch) return;\n\n    async function renderMovie() {\n      try {\n        const moviesResult = await searchMovie(movieSearch);\n        setMovies(moviesResult);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    renderMovie();\n  }, [movieSearch]);\n\n  return (\n    <MoviesSection>\n      <MoviesForm onSubmit={handleSubmit}>\n        <MoviesInput type=\"text\" value={query} onChange={handleChange} />\n        <Button type=\"submit\">Search</Button>\n      </MoviesForm>\n\n      {!!movies.length && <MovieList movies={movies} />}\n    </MoviesSection>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '7f9da092915547cc78cd8c8696294985',\n  language: 'en-US',\n};\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n"],"names":["Container","styled","ListContainer","LinkTitle","Link","MovieItem","MovieList","movies","location","useLocation","map","id","original_title","poster_path","to","state","from","src","noImage","alt","width","MoviesSection","MoviesForm","MoviesInput","Button","useState","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","movieSearch","get","useEffect","searchMovie","moviesResult","console","log","renderMovie","onSubmit","e","preventDefault","type","value","onChange","currentTarget","toLowerCase","length","axios","api_key","language","getTrandingMovies","response","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}